// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id       Int     @id @default(autoincrement())
  username String  @unique
  name     String
  email    String  @unique
  password String
  role     UserRole @default(STUDENT)
  classId  Int?    // Nullable to allow users without a class
  class    Class?  @relation(fields: [classId], references: [id])
  notes    Note[]
}

model Class {
  id          Int    @id @default(autoincrement())
  name        String
  description String
  users       User[]
  notes       Note[]
}

enum Subject {
  MA   // Mathematics
  ELL  // English Language & Literature
  TP   // Thinking Programme
  HC   // Higher Chinese
  PE   // Physical Education
  ACC  // Appreciation of Chinese Culture
  LSS  // Lower Secondary Science
  HI   // History
  GE   // Geography
  ART  // Art
  IF   // Infocomm
}

model Note {
  id          Int       @id @default(autoincrement())
  title       String
  content     String
  subject     Subject?   // Enum for the subject of the note
  isVisible   Boolean   @default(false) // Added field to control visibility
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  authorId    Int
  classId     Int?
  class       Class?    @relation(fields: [classId], references: [id])
  author      User      @relation(fields: [authorId], references: [id])
}


enum UserRole {
  TEACHER
  STUDENT
}
